{"version":3,"sources":["App.jsx","index.jsx"],"names":["candyColors","App","useState","currentColorArrangement","setColorArrangement","squaredBeingDragged","setSquareBeingDragged","squareBeingReplaced","setsquareBeingReplaced","score","setScore","checkForColumnOfThree","i","columnOfThree","width","decidedColor","every","square","forEach","checkForColumnOfFour","columnOfFour","checkForRowOfThree","notValid","rowOfThree","includes","checkForRowOfFour","moveIntoSquareBelow","randomNumber","Math","floor","random","length","dragStart","e","console","log","target","dragDrop","dragEnd","squareBeingDraggedId","parseInt","getAttribute","squareBeingReplacedId","style","backgroundColor","validMove","isAColumnOfFour","isARowOfFour","isAColumnOfThree","isARowOfThree","useEffect","randomColorArrangement","randomColor","push","createBoard","timer","setInterval","clearInterval","className","map","candyColor","index","alt","data-id","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc6bb64.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react';\nconst width = 8\nconst candyColors = [\n  'blue',\n  'green',\n  'orange',\n  'purple',\n  'red',\n  'yellow'\n]\nfunction App() {\n  const [currentColorArrangement, setColorArrangement] = useState([])\n  const [squaredBeingDragged, setSquareBeingDragged] = useState(null)\n  const [squareBeingReplaced, setsquareBeingReplaced] = useState(null)\n  const [score, setScore] = useState(0)\n\n  const checkForColumnOfThree = () => {\n    for(let i = 0; i < 47; i++) {\n      const columnOfThree = [i, i+width, i+width*2]\n      const decidedColor = currentColorArrangement[i]\n      if (columnOfThree.every(square=> currentColorArrangement[square] === decidedColor)) {\n        columnOfThree.forEach(square=> currentColorArrangement[square] = '')\n        return true\n      }\n    }\n  }\n  const checkForColumnOfFour = () => {\n    for(let i = 0; i < 39; i++) {\n      const columnOfFour = [i, i+width,i+width*2, i+width*3]\n      const decidedColor = currentColorArrangement[i]\n      if (columnOfFour.every(square=> currentColorArrangement[square] === decidedColor)) {\n        columnOfFour.forEach(square=> currentColorArrangement[square] = '')\n        return true\n      }\n    }\n  }\n    const checkForRowOfThree = () => {\n      const notValid = [6,7,14,15,22,23,30,31,38,39,46,47,54,55,63,64]\n        for(let i = 0; i < 64; i++) {\n            const rowOfThree = [i, i+1, i+2]\n            const decidedColor = currentColorArrangement[i]\n            if (notValid.includes(i)) continue\n              if (rowOfThree.every(square=> currentColorArrangement[square] === decidedColor)) {\n                  rowOfThree.forEach(square=> currentColorArrangement[square] = '')\n                  return true\n              }\n        }\n  }\n    const checkForRowOfFour = () => {\n      const notValid = [5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55,62,63,64]\n        for(let i = 0; i < 64; i++) {\n            const rowOfThree = [i, i+1, i+2, i+3]\n            const decidedColor = currentColorArrangement[i]\n            if (notValid.includes(i)) continue\n              if (rowOfThree.every(square=> currentColorArrangement[square] === decidedColor)) {\n                  rowOfThree.forEach(square=> currentColorArrangement[square] = '')\n                  return true\n              }\n        }\n  }\n\n  const moveIntoSquareBelow = () => {\n    for (let i = 0; i < 64-width; i++) {\n       const firstRow = [0,1,2,3,4,5,6,7]\n       const isFirstRow = firstRow.includes(i)\n       if (isFirstRow && currentColorArrangement[i] === '') {\n         let randomNumber = Math.floor(Math.random() * candyColors.length)\n         currentColorArrangement[i] = candyColors[randomNumber]\n       }\n       if (currentColorArrangement[i+width] === '') {\n         currentColorArrangement[i+width] = currentColorArrangement[i]\n         currentColorArrangement[i] = ''\n         return true\n       }\n    }\n  }\n  const dragStart = (e) => {\n     console.log(e.target)\n    setSquareBeingDragged(e.target)\n  }\n\n  const dragDrop = (e) => {\n    console.log(e.target)\n    setsquareBeingReplaced(e.target)\n  }\n\n  const dragEnd = (e) => {\n    const squareBeingDraggedId = parseInt(squaredBeingDragged.getAttribute('data-id'))\n    const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'))\n    currentColorArrangement[squareBeingReplacedId] = squaredBeingDragged.style.backgroundColor\n    currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.style.backgroundColor\n     const validMoves = [\n      squareBeingDraggedId -1,\n      squareBeingDraggedId - width,\n      squareBeingDraggedId + 1,\n      squareBeingDraggedId + width,\n    ]\n    const validMove = validMoves.includes(squareBeingReplacedId)\n    const isAColumnOfFour = checkForColumnOfFour()\n    const isARowOfFour = checkForRowOfFour()\n    const isAColumnOfThree = checkForColumnOfThree()\n    const isARowOfThree = checkForRowOfThree()\n    if (squareBeingReplacedId && validMove && (isAColumnOfFour || isARowOfFour || isAColumnOfThree || isARowOfThree)) {\n      setSquareBeingDragged(null)\n      setsquareBeingReplaced(null)\n      setScore(score+100)\n    } else {\n      currentColorArrangement[squareBeingReplacedId] = squareBeingReplaced.style.backgroundColor\n      currentColorArrangement[squareBeingDraggedId] = squaredBeingDragged.style.backgroundColor\n      setColorArrangement([...currentColorArrangement])\n    }\n  }\n\n  const createBoard = () => {\n    const randomColorArrangement = []\n    for (let i = 0; i < width*width; i++) {\n      const randomColor =candyColors[Math.floor(Math.random() * candyColors.length)]\n      randomColorArrangement.push(randomColor);\n    }\n    setColorArrangement(randomColorArrangement)\n  }\n  useEffect(()=>{\n    createBoard();\n  },[])\n\n  useEffect(()=>{\n    const timer = setInterval(()=>{\n      checkForColumnOfFour()\n      checkForColumnOfThree()\n      checkForRowOfFour()\n      checkForRowOfThree()\n      moveIntoSquareBelow()\n      setColorArrangement([...currentColorArrangement])\n    },100)\n    return ()=>clearInterval(timer)\n  },[checkForColumnOfFour, checkForColumnOfThree, checkForRowOfFour,checkForRowOfThree, moveIntoSquareBelow,currentColorArrangement])\n  return (\n    <div className=\"app\">\n       <h1>CANDY CRUSH</h1>\n       <p>Score: {score}</p>\n      <div className=\"game\">\n        {currentColorArrangement.map((candyColor, index)=>(\n          <div\n            className=\"box\"\n            key={index} \n            style={{backgroundColor: candyColor}} \n            alt={candyColor}\n            data-id={index}\n            draggable={true}\n            onDragStart={dragStart}\n            onDragOver={(e)=> e.preventDefault()}\n            onDragEnter = {(e)=>e.preventDefault()}\n            onDragLeave = {(e)=>e.preventDefault()}\n            onDrop={dragDrop}\n            onDragEnd={dragEnd}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}